{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auto.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,gFAAgF,+BAA+B,iCAAiC,yBAAyB,yBAAyB,uBAAuB,KAAK,S;;;;;;;;;;;ACA9N,mJAAmJ,iBAAiB,yBAAyB,iYAAiY,0CAA0C,oIAAoI,WAAW,aAAa,YAAY,0EAA0E,wBAAwB,qKAAqK,6WAA6W,sKAAsK,+jBAA+jB,sKAAsK,mRAAmR,wBAAwB,4IAA4I,yCAAyC,WAAW,0CAA0C,YAAY,+QAA+Q,6JAA6J,wBAAwB,yIAAyI,oIAAoI,oHAAoH,urBAAurB,iBAAiB,8aAA8a,oJAAoJ,wBAAwB,qIAAqI,oIAAoI,wHAAwH,qiBAAqiB,YAAY,GAAG,YAAY,ghBAAghB,iBAAiB,iR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv0M;AAElB;AACK;AAEM;AAQ3C;IAEE,sBAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QAexC,SAAI,GAAa,EAAE,CAAC;QAMpB,aAAQ,GAAG;YACT;gBACE,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;gBACb,SAAS,EAAE,EAAE;aACd;YACD;gBACE,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;gBACb,SAAS,EAAE,EAAE;aACd;YACD;gBACE,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;gBACb,SAAS,EAAE,CAAC;aACb;SACF,CAAC;QACF,SAAI,GAAG;YACL;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,CAAC;aACT;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,CAAC;aACT;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,CAAC;aACT;SACF,CAAC;QAxDA,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,yCAAyC;YACjD,UAAU,EAAE,qCAAqC;YACjD,WAAW,EAAE,4CAA4C;YACzD,SAAS,EAAE,qBAAqB;YAChC,aAAa,EAAE,iCAAiC;YAChD,iBAAiB,EAAE,cAAc;SAClC,CAAC;QACF,sDAAsB,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAiDD,+BAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,kCAAW,GAAX,UAAY,EAAU,EAAE,CAAS;QAC/B,GAAG,CAAC,CAAU,UAA0C,EAA1C,UAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,EAA1C,cAA0C,EAA1C,IAA0C;YAAnD,IAAI,CAAC;YACR,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAE;YAChD,CAAC;SACF;QACD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,GAAG,CAAC,CAAW,UAA2B,EAA3B,UAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAA3B,cAA2B,EAA3B,IAA2B;YAApC,IAAI,CAAC;YACT,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;SAC3B;IACH,CAAC;IAED,8BAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAM,CAAC,GAAG,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,8BAAO,GAAP,UAAQ,EAAU;QAChB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,6BAAM,GAAN;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAC5B,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,+BAAQ,GAAR,UAAS,CAAS;QAChB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,qCAAc,GAAd,UAAe,EAAU;QACvB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,cAAc,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACnB,CAAC;IAED,2BAAI,GAAJ;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAED,+BAAQ,GAAR,UAAS,CAAS;QAChB,IAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAG,oCAAI,CAAC,CAAC,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,CAAC,KAAK,OAAO,IAAI,MAAM,KAAK,0CAA0C,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,qCAAc,GAAd;QACE,iDAAiB,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAMC;QALC,iDAAiB,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;aACnC,EAAE,CAAC,OAAO,EAAE,UAAC,IAAkB;YAC5B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3C,CAAC,CACF,CAAC;IACN,CAAC;IAED,oCAAa,GAAb;QAAA,iBAMC;QALC,iDAAiB,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;aACnC,EAAE,CAAC,OAAO,EAAE,UAAC,IAAkB;YAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7C,CAAC,CACF,CAAC;IACN,CAAC;IAED,gCAAS,GAAT,UAAU,EAAU,EAAE,QAAgB,EAAE,IAAY;QAClD,GAAG,CAAC,CAAc,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAA1B,IAAI,KAAK;YACZ,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3C,EAAE,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;oBACxB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACtB,GAAG,CAAC,CAAY,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;wBAAxB,IAAI,GAAG;wBACV,IAAI,CAAC,UAAC;wBACN,EAAE,CAAC,CAAC,QAAQ,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;4BAC9B,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC;wBACpB,CAAC;wBACD,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAE,CAAC;qBAC1B;gBACH,CAAC;YACH,CAAC;SACF;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,gCAAS,GAAT,UAAU,EAAU,EAAE,QAAgB;QACpC,GAAG,CAAC,CAAc,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAA1B,IAAI,KAAK;YACZ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;oBAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3B,MAAM,CAAC,KAAK,CAAC;gBACf,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SACF;IACH,CAAC;IAED,8BAAO,GAAP,UAAQ,CAAS;QACf,IAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACjC,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAE;QACrC,IAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;QAClG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,6BAAM,GAAN,UAAO,CAAU;QACf,IAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1B,GAAG,CAAC,CAAU,UAAS,EAAT,SAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;YAAlB,IAAI,CAAC;YACR,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE7B,CAAC;SACF;QACD,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,+BAAQ,GAAR;QAAA,iBAMC;QALC,iDAAiB,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC;aAC9B,EAAE,CAAC,OAAO,EAAE,UAAC,IAAkB;YAC5B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/C,CAAC,CACF,CAAC;IACN,CAAC;IACD,gCAAS,GAAT;QACE,iDAAiB,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IACD,6BAAM,GAAN,UAAO,EAAU,EAAE,KAAe;QAClC,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,GAAG,CAAC,CAAW,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAd,IAAI,CAAC;YACT,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,GAAG,IAAI,CAAC;YACd,CAAC;SACF;QACD,MAAM,CAAC,IAAI,CAAC;IACZ,CAAC;IAtOU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG6B,yDAAW;OAF7B,YAAY,CAuOxB;IAAD,mBAAC;CAAA;AAvOwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACjB;AACM;AACJ;AACc;AACJ;AACrD,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,YAAY,EAAG,SAAS,EAAE,2DAAY,EAAE;IAChD,EAAE,IAAI,EAAE,OAAO,EAAG,SAAS,EAAE,qEAAc,EAAC;IAC5C,EAAE,IAAI,EAAE,IAAI,EAAG,UAAU,EAAE,aAAa,EAAC;CACxC,CAAC;AAeJ;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACzBqB;AAO3C;IAEE;IAAgB,CAAC;IAFN,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,WAAW,CAMvB;IAAD,kBAAC;CAAA;AANuB;;;;;;;;;;;;ACPxB,mB;;;;;;;;;;;ACAA,iI;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;;ACP3B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@import url('http://getbootstrap.com/dist/css/bootstrap.css');\\r\\n\\r\\nol li.list-group-item {\\r\\n  list-style: decimal inside;\\r\\n  display: list-item;\\r\\n  font-size: x-large;\\r\\n  color: aliceblue;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div style=\\\"background-image: url('../assets/background.jpeg')\\\">\\n<div class=\\\"container\\\">\\n  <<h1 style=\\\"text-align: center;color: aliceblue;background-color: black ; border-radius: 5px\\\" class=\\\"list-group-item col-sm-6 col-sm-offset-3\\\">\\n    SUP'COM CyberSecurity Club Scoreboard\\n  </h1>\\n    <div *ngIf=\\\"!scoreboard\\\" >\\n      <div class=\\\"col-sm-8 col-sm-offset-2\\\" >\\n        <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n          <div class=\\\"form-group\\\">\\n        <ul class=\\\"list-group\\\">\\n    <li  type='list-group-item' [ngClass]=\\\"{'list-group-item': true\\n                }\\\" style=\\\"background-color: black\\\"\\n      *ngFor=\\\"let team of Team \\\">\\n      <h3 style=\\\"color: aliceblue\\\">\\n        Name  : {{team.name}}  Score :  {{team.score}}</h3>\\n    </li>\\n  </ul>\\n  </div>\\n  <button style=\\\"text-align: center;background-color: black;color: aliceblue\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"  >Submit</button>\\n  </form>\\n        <button class=\\\"btn btn-primary\\\" style=\\\"background-color: black;color: aliceblue\\\" (click)=\\\"test = true\\\"  >Add team</button>\\n        <form *ngIf=\\\"test\\\" (ngSubmit)=\\\"onCreate(k)\\\" #k=\\\"ngForm\\\">\\n          <div class=\\\"row\\\">\\n            <div  class=\\\"col-sm-4 \\\">\\n          <input class=\\\"form-control \\\" name=\\\"name\\\" ngModel >\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"background-color: black;color: aliceblue\\\" >Create</button>\\n            </div>\\n          </div>\\n        </form>\\n        <button class=\\\"btn btn-primary\\\" style=\\\"background-color: black;color: aliceblue\\\" (click)=\\\"tsk = true\\\"  >Add task</button>\\n        <form *ngIf=\\\"tsk\\\" (ngSubmit)=\\\"addtask(k)\\\" #k=\\\"ngForm\\\">\\n          <div class=\\\"row\\\">\\n            <div  class=\\\"col-sm-4 \\\">\\n              <input class=\\\"form-control \\\" name=\\\"name\\\" placeholder=\\\"Name\\\" ngModel >\\n              <input class=\\\"form-control \\\" name=\\\"score\\\" placeholder=\\\"Score\\\" ngModel >\\n              <input class=\\\"form-control \\\" name=\\\"flag\\\" placeholder=\\\"Flag\\\" ngModel >\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"background-color: black;color: aliceblue\\\" >Create</button>\\n            </div>\\n          </div>\\n        </form>\\n        <button class=\\\"btn btn-primary\\\" style=\\\"background-color: black;color: aliceblue\\\" (click)=\\\"sort()\\\" >ScoreBoard</button>\\n  </div>\\n    </div>\\n      <div *ngIf=\\\"scoreboard\\\" >\\n        <div class=\\\"col-sm-8 col-sm-offset-2\\\" >\\n\\n          <ol type=\\\"1\\\" class=\\\"list-group\\\">\\n                <li  type='list-group-item' [ngClass]=\\\"{'list-group-item': true} \\\" style=\\\"background-color: black\\\"\\n                     *ngFor=\\\"let team of sorted \\\">\\n                  <h2 style=\\\"color: aliceblue;font-family: 'Calibri Light'\\\">Name  : {{team.name}} ----------------------------- Score :  {{team.score}}</h2>\\n                </li>\\n              </ol>\\n      </div>\\n        <div class=\\\"row\\\"  >\\n          <div >\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4 col-sm-offset-4\\\">\\n            <button class=\\\"btn btn-block\\\" style=\\\"background-color: black;color: aliceblue\\\" (click)=\\\"admin=true\\\" *ngIf=\\\"!admin\\\">admin space</button>\\n            <br>\\n            <div *ngIf=\\\"admin\\\" style=\\\"min-width: 600px;background-color: black; border-radius: 5px\\\"\\n                 class=\\\"col-sm-offset-2 list-group-item\\\" >\\n              <div  style=\\\"background-color: black;border-radius: 5px\\\">\\n            <form *ngIf=\\\"!isauth\\\" (ngSubmit)=\\\"Onsignin(f)\\\" #f=\\\"ngForm\\\" style=\\\"background-color: black;border-radius: 5px\\\"  >\\n              <div class=\\\"form-group\\\">\\n                <br><h2 style=\\\"color: aliceblue;text-align: center\\\">Authentification</h2><br>\\n                <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                <input type=\\\"text\\\" id=\\\"id\\\" class=\\\"form-control col-sm-2\\\" name=\\\"id\\\" ngModel required placeholder=\\\"ID\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                  <br>\\n                <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" ngModel required placeholder=\\\"PASS\\\">\\n                </div>\\n              </div>\\n              <br><br><br><br>\\n              <br>\\n              <button style=\\\"background-color: black;color: aliceblue;text-align: center\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"f.invalid\\\">Se connecter</button>\\n            </form>\\n                <br>\\n              </div>\\n          </div>\\n        </div>\\n        </div>\\n        </div>\\n\\n      </div>\\n  <div class=\\\"row\\\"  >\\n    <div >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4 col-sm-offset-4\\\">\\n          <button class=\\\"btn btn-block\\\" style=\\\"background-color: black;color: aliceblue\\\" (click)=\\\"task=true\\\" *ngIf=\\\"!task\\\">save flag</button>\\n          <br>\\n          <div *ngIf=\\\"task\\\" style=\\\"min-width: 600px;background-color: black; border-radius: 5px\\\"\\n               class=\\\"col-sm-offset-2 list-group-item\\\" >\\n            <div  style=\\\"background-color: black;border-radius: 5px\\\">\\n              <form *ngIf=\\\"!isauth\\\" (ngSubmit)=\\\"Ontask(f)\\\" #f=\\\"ngForm\\\" style=\\\"background-color: black;border-radius: 5px\\\"  >\\n                <div class=\\\"form-group\\\">\\n                  <br><h2 style=\\\"color: aliceblue;text-align: center\\\">Save flag</h2><br>\\n                  <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                    <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control col-sm-2\\\" name=\\\"id\\\" ngModel required placeholder=\\\"Name\\\">\\n                  </div>\\n                  <br>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                <select class=\\\"form-control \\\" name=\\\"task\\\" ngModel>\\n                  <option *ngFor=\\\"let c of tasklist\\\" value={{c.taskname}}>{{c.taskname}}</option>\\n                </select>\\n                </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                    <br>\\n                    <input type=\\\"password\\\" id=\\\"flag\\\" class=\\\"form-control\\\" name=\\\"flag\\\" ngModel required placeholder=\\\"flag\\\">\\n                  </div>\\n                </div>\\n                <br><br><br><br>\\n                <br>\\n                <button type=\\\"submit\\\" style=\\\"background-color: black;color: aliceblue;text-align: center\\\" class=\\\"btn btn-default col-sm-offset-5\\\" [disabled]=\\\"f.invalid\\\">Send</button>\\n              </form>\\n              <br>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n</div>\\n</div>\\n  <br><br>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NgForm, NgModel} from '@angular/forms' ;\nimport * as sha1 from 'js-sha1';\nimport * as firebase from 'firebase';\nimport DataSnapshot = firebase.database.DataSnapshot;\nimport {AutoService} from './auto.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private service: AutoService) {\n    var config = {\n      apiKey: \"AIzaSyANLbzu6b15GkL8-xnE3o9FOE1yW3SRqTA\",\n      authDomain: \"scoreboard-security.firebaseapp.com\",\n      databaseURL: \"https://scoreboard-security.firebaseio.com\",\n      projectId: \"scoreboard-security\",\n      storageBucket: \"scoreboard-security.appspot.com\",\n      messagingSenderId: \"844291059524\"\n    };\n    firebase.initializeApp(config);\n  }\n  x: number;\n  tsk: boolean;\n  task: boolean;\n  tasknbr: number;\n  save: number[] = [];\n  sorted: any[];\n  scoreboard: boolean;\n  test: boolean;\n  tnbr: number;\n  admin: boolean;\n  tasklist = [\n    {\n      taskname: 'task1',\n      flag: 'totoro',\n      wteams: [1,2],\n      scoretask: 13,\n    },\n    {\n      taskname: 'task2',\n      flag: 'deadfish',\n      wteams: [2,3],\n      scoretask: 10,\n    },\n    {\n      taskname: 'task3',\n      flag: 'cette nuit',\n      wteams: [3,4],\n      scoretask: 5,\n    }\n  ];\n  Team = [\n    {\n      id: 0,\n      name: 'team1',\n      score: 0,\n    },\n    {\n      id: 1,\n      name: 'team2',\n      score: 0,\n    },\n    {\n      id: 2,\n      name: 'team3',\n      score: 0,\n    }\n  ];\n\n  ngOnInit() {\n    this.scoreboard = true;\n    this.test = false;\n    this.tnbr = -1;\n    this.getscoreboard();\n    this.gettable();\n    this.Team = this.sorted;\n    this.admin = false;\n    this.task = false;\n    this.tsk = false;\n    this.gettasks();\n  }\n\n  changescore(id: number, x: number) {\n    for (let i of Array.from(Array(this.Team.length).keys())) {\n      if (this.Team[i].id === id) {\n        this.Team[i].score = this.Team[i].score + 20 ;\n      }\n    }\n    console.log(x);\n    for ( let f of Array.from(Array(x).keys()) ) {\n      this.Team[this.x].score++;\n    }\n  }\n\n  addteam(name: string) {\n    this.tnbr = this.tnbr + 1;\n    const x = {id: this.Team.length, name: name, score: 0};\n    this.Team.push(x);\n  }\n\n  delteam(id: number) {\n    this.Team[id].score = -999;\n    this.tnbr = this.tnbr - 1;\n  }\n\n  sortit() {\n    const sortedlist = this.Team;\n    sortedlist.sort(function (a, b) {\n      return b.score - a.score;\n    });\n    return sortedlist;\n  }\n\n  onSubmit() {\n    this.sorted = this.sortit();\n    this.savescoreboard();\n  }\n\n  onCreate(k: NgForm) {\n    this.test = false;\n    this.addteam(k.value['name']);\n  }\n\n  deletefunction(id: number) {\n    this.Team[id].name = 'deleted team';\n    this.delteam(id);\n  }\n\n  sort() {\n    this.scoreboard = true;\n    this.admin = false;\n    this.sorted = this.sortit();\n    console.log(this.sorted);\n  }\n\n  Onsignin(f: NgForm) {\n    const a = f.value['id'];\n    const b = f.value['password'];\n    let hached = sha1(b);\n    if (a === 'admin' && hached === '6f9b9af3cd6e8b8a73c2cdced37fe9f59226e27d') {\n      this.scoreboard = false;\n    }\n  }\n\n  savescoreboard() {\n    firebase.database().ref('/scoreboard').set(this.sorted);\n  }\n\n  gettable() {\n    firebase.database().ref('/scoreboard')\n      .on('value', (data: DataSnapshot) => {\n          this.Team = data.val() ? data.val() : [];\n        }\n      );\n  }\n\n  getscoreboard() {\n    firebase.database().ref('/scoreboard')\n      .on('value', (data: DataSnapshot) => {\n          this.sorted = data.val() ? data.val() : [];\n        }\n      );\n  }\n\n  addwinner(id: number, taskname: string, flag: string) {\n    for (let index of this.tasklist) {\n      if (this.veriftask(id, taskname) === false) {\n        if (flag === index.flag) {\n          index.wteams.push(id);\n          for (let ind of this.tasklist) {\n            let x;\n            if (taskname === ind.taskname) {\n              x = ind.scoretask;\n            }\n            this.changescore(id, x );\n          }\n        }\n      }\n    }\n    this.savetasks();\n  }\n\n  veriftask(id: number, taskname: string) {\n    for (let index of this.tasklist) {\n      if (index.taskname === taskname) {\n        let c = this.search(id, index.wteams);\n        if (c === false) {\n          console.log(this.tasklist);\n          return false;\n        }\n        console.log(this.tasklist);\n        return true;\n      }\n    }\n  }\n\n  addtask(f: NgForm) {\n    const taskname = f.value['name'];\n    const scoretask = +f.value['score'] ;\n    const flag = f.value['flag'];\n    this.tasklist.push({taskname: taskname, flag: flag, wteams: [90, 91], scoretask: scoretask - 2 });\n    this.tasknbr = this.tasknbr + 1;\n    this.tsk = false;\n    this.savetasks();\n  }\n\n  Ontask(f: NgModel) {\n    const a = f.value['id'];\n    const b = f.value['flag'];\n    console.log(a);\n    const c = f.value['task'];\n    for (let d of this.Team) {\n      if (d.name === a) {\n        console.log(d.id, c, b);\n        this.addwinner(d.id, c, b);\n\n      }\n    }\n    this.onSubmit();\n  }\n  gettasks() {\n    firebase.database().ref('/tasks')\n      .on('value', (data: DataSnapshot) => {\n          this.tasklist = data.val() ? data.val() : [];\n        }\n      );\n  }\n  savetasks() {\n    firebase.database().ref('/tasks').set(this.tasklist);\n  }\n  search(id: number, table: number[]) {\n  let test = false;\n  for ( let i of table) {\n    if (id === i) {\n      test = true;\n    }\n  }\n  return test;\n  }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport {RouterModule, Routes} from '@angular/router';\nconst appRoutes: Routes = [\n  { path: 'scoreboard' , component: AppComponent },\n  { path: 'login' , component: LoginComponent},\n  { path: '**' , redirectTo: '/scoreboard'}\n  ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport DataSnapshot = firebase.database.DataSnapshot;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoService {\n\n  constructor() { }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<button>login as an admin</button>\\n<button>scoreboard</button>\\nbech ne5ou routage men project e5er fisa3\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}